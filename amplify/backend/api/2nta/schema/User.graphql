
union Profile = User_Profile | Company_Profile


type User @model {
    id: ID!
    dateJoined: String!
    name: String!
    email: String!
    group: User_Group!
    profile: Profile
    copmany_profile: Company_Profile
    rating: Float
    notifications: [Notification]
 }

type Notification {
    id: ID!
    timestamp: Int!
    active: Boolean!
    read: Boolean!
    data: Notification_Data!
}

type Notification_Type {
    JOB
    IDEA
    POST
    MESSAGE
    SYSTEM
}

type Notification_Action {
    ACCEPT
    REJECT
    VIEW
    CAMCEL
    REMOVE
}

type Notification_Data {
    type: Notification_Type!
    attach_id: ID!
    description: String!
    actions: [Notification_Action]
}

type User_Group {
    COMPANY
    USER
}

 type Company_Profile {
    lastUpdate: String
    about: String
    location: String
    photo: String
    coverPhoto: String
    industry: String!
    age: String!
    size: String!
 }

 type User_Profile {
    lastUpdate: String
    gender: String!
    dob: String!
    about: String
    location: String
    photo: String
    coverPhoto: String
    experience: [Experience]
    education: [Education]
    skills: [Skill]
    personality: Personality
 }


type Education {
    title: String!
    institute: String!
    degree: String!
    start_date: String!
    end_date: String! 
}

 type Experience {
    copmany: String!
    job_title: String!
    job_description: String!
    years: Int!
 }

 type Skill {
    name: String!
    experience_in_month: Int!
 }

 type Personality {
    openness: Int!
    conscientiousness: Int!
    extraversion: Int!
    agreeableness: Int!
    neuroticism: Int!
 }


 type Query {
    user(id:ID!): User
 }
